{"ast":null,"code":"import _defineProperty from\"/Users/jvilchis/SMU/booksearchreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/jvilchis/SMU/booksearchreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/jvilchis/SMU/booksearchreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jvilchis/SMU/booksearchreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jvilchis/SMU/booksearchreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// see SignupForm.js for comments\nimport React,{useState}from'react';import{Form,Button,Alert}from'react-bootstrap';import{useMutation}from'@apollo/client';import{LOGIN}from'../utils/mutations';import{loginUser}from'../utils/API';import Auth from'../utils/auth';var LoginForm=function LoginForm(){var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),userFormData=_useState2[0],setUserFormData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,1),validated=_useState4[0];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showAlert=_useState6[0],setShowAlert=_useState6[1];var _useMutation=useMutation(LOGIN),_useMutation2=_slicedToArray(_useMutation,2),login=_useMutation2[0],error=_useMutation2[1].error;var handleFormSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var mutationResponse,token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.prev=1;_context.next=4;return login({variables:{email:userFormData.email,password:userFormData.password}});case 4:mutationResponse=_context.sent;token=mutationResponse.data.login.token;Auth.login(token);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function handleFormSubmit(_x){return _ref.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setUserFormData(_objectSpread(_objectSpread({},userFormData),{},_defineProperty({},name,value)));};/*\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n*/return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Form,{noValidate:true,validated:validated,onSubmit:handleFormSubmit},/*#__PURE__*/React.createElement(Alert,{dismissible:true,onClose:function onClose(){return setShowAlert(false);},show:showAlert,variant:\"danger\"},\"Something went wrong with your login credentials!\"),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Your email\",name:\"email\",onChange:handleChange,value:userFormData.email,required:true}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},\"Email is required!\")),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Your password\",name:\"password\",onChange:handleChange,value:userFormData.password,required:true}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},\"Password is required!\")),/*#__PURE__*/React.createElement(Button,{disabled:!(userFormData.email&&userFormData.password),type:\"submit\",variant:\"success\"},\"Submit\")));};export default LoginForm;","map":{"version":3,"sources":["/Users/jvilchis/SMU/booksearchreact/client/src/components/LoginForm.js"],"names":["React","useState","Form","Button","Alert","useMutation","LOGIN","loginUser","Auth","LoginForm","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","login","error","handleFormSubmit","event","preventDefault","variables","mutationResponse","token","data","console","log","handleChange","target","name","value"],"mappings":"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","sourcesContent":["// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN } from '../utils/mutations';\nimport { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: userFormData.email, password: userFormData.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({\n      ...userFormData,\n      [name]: value,\n    });\n  };\n\n/*\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n*/\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}